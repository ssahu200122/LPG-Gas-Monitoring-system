import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
// import 'package:firebase_auth/firebase_auth.dart'; // Still needed for the overall app logic, but not directly in MaterialApp home now
import 'package:provider/provider.dart';

// Import all screens and services
// import 'package:lpg_app/screens/auth_screen.dart'; // No longer initial home
// import 'package:lpg_app/screens/lpg_device_list_screen.dart'; // No longer initial home
import 'package:lpg_app/services/auth_service.dart';
import 'package:lpg_app/services/firestore_service.dart';

// Import the new SplashScreen
import 'package:lpg_app/screens/splash_screen.dart'; 

// Import Firebase options generated by FlutterFire CLI
// You MUST run 'flutterfire configure' to generate this file.
import 'firebase_options.dart';

void main() async {
  // Ensure Flutter widgets binding is initialized before any Firebase operations.
  WidgetsFlutterBinding.ensureInitialized();
  
  // Initialize Firebase with the default options for the current platform.
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  
  // Run the main application, wrapped with MultiProvider to make services available.
  runApp(
    MultiProvider(
      providers: [
        // Provide AuthService instance to the widget tree.
        Provider<AuthService>(create: (_) =>  AuthService()),
        // Provide FirestoreService instance to the widget tree.
        Provider<FirestoreService>(create: (_) =>  FirestoreService()),
      ],
      child: const MyApp(), // Your main application widget.
    ),
  );
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'LPG Gas Monitor', // Application title displayed in task switcher
      debugShowCheckedModeBanner: false, // Hide the debug banner in UI
      theme: ThemeData(
        primarySwatch: Colors.teal, // Defines the primary color palette
        visualDensity: VisualDensity.adaptivePlatformDensity, // Adapts UI density based on platform
        fontFamily: 'Inter', // Custom font (ensure it's added in pubspec.yaml if external)
        
        // AppBar Theme Configuration
        appBarTheme: const AppBarTheme(
          backgroundColor: Colors.teal, // Background color of the AppBar
          foregroundColor: Colors.white, // Color for text and icons in the AppBar
          elevation: 4, // Shadow beneath the AppBar
          shadowColor: Colors.black54, // Color of the AppBar's shadow
        ),
        
        // InputDecoration (for TextFormFields) Theme Configuration
        inputDecorationTheme: InputDecorationTheme(
          filled: true, // Fill the text field background
          fillColor: Colors.white, // Background color of the text field
          border: OutlineInputBorder( // Default border style
            borderRadius: BorderRadius.circular(10), // Rounded corners
            borderSide: BorderSide.none, // No visible border line by default
          ),
          focusedBorder: OutlineInputBorder( // Border when the text field is focused
            borderRadius: BorderRadius.circular(10),
            borderSide: const BorderSide(color: Colors.teal, width: 2), // Teal border when focused
          ),
          enabledBorder: OutlineInputBorder( // Border when the text field is enabled but not focused
            borderRadius: BorderRadius.circular(10),
            borderSide: BorderSide.none, // No visible border line
          ),
        ),
        
        // ElevatedButton Theme Configuration
        elevatedButtonTheme: ElevatedButtonThemeData(
          style: ElevatedButton.styleFrom(
            backgroundColor: Colors.teal, // Button background color
            foregroundColor: Colors.white, // Button text color
            padding: const EdgeInsets.symmetric(horizontal: 30, vertical: 15), // Inner padding
            shape: RoundedRectangleBorder( // Button shape with rounded corners
              borderRadius: BorderRadius.circular(10),
            ),
            textStyle: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold), // Text style
            elevation: 5, // Button shadow
            shadowColor: Colors.black26, // Color of the button's shadow
          ),
        ),
        
        // Card Theme Configuration
        cardTheme: CardThemeData(
          elevation: 8, // Card shadow
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(15), // Rounded corners for cards
          ),
          margin: const EdgeInsets.all(16), // Margin around cards
          shadowColor: Colors.black26, // Color of the card's shadow
        ),
      ),
      
      // The initial screen is now the SplashScreen
      home: const SplashScreen(), 
    );
  }
}
